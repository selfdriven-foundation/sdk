"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hackInstance = void 0;
const axios_1 = __importDefault(require("axios"));
const rax = __importStar(require("retry-axios"));
const utils_1 = require("../utils");
const hackInstance = (options, userAgent) => {
    const axiosInstance = axios_1.default.create();
    axiosInstance.defaults.raxConfig = {
        instance: axiosInstance,
        retry: options.retryCount,
        noResponseRetries: 3,
        retryDelay: options.retryDelay,
        statusCodesToRetry: options.retry429 ? [[429, 429]] : [],
        backoffType: 'static', // the backoff type. options are 'exponential' (default), 'static' or 'linear'
    };
    // set default headers
    axiosInstance.defaults.headers = utils_1.getHeaders(options.projectId, userAgent);
    axiosInstance.defaults.timeout = options.requestTimeout;
    rax.attach(axiosInstance);
    return axiosInstance;
};
exports.hackInstance = hackInstance;
